from django.db import models

from base.models import BaseModel


## NEW USER FORM ##

class NewUser(BaseModel):
	first_name = models.CharField(max_length = 128)
	last_name = models.CharField(max_length = 128)
	user_id = models.CharField(max_length = 128, unique = True)
	default_pass = models.IntegerField(max_length = 128)
	employee_id = models.IntegerField(max_length = 128)
	department = models.CharField(max_length = 128)
	designation = models.CharField(max_length = 128)
	cell_no = models.CharField(max_length = 128)



	signature_hr = models.ForeignKey("auth.User",verbose_name="Signature & Designation for HR")
	signature_noc = models.ForeignKey("auth.User", related_name="+", verbose_name="Signature & Designation for NOC")
	signature_user = models.ForeignKey("auth.User", related_name="+", verbose_name="Signature & Designation for User")


	def __unicode__(self):
		return '%s %s' %(self.first_name, self.last_name)


class EmailCombination(BaseModel):
	parent_user = models.ForeignKey("HR.NewUser")
	email_option = models.EmailField()
	

## REFERENCE CHECK FORM ##

class ReferenceCheck(BaseModel):
	name = models.CharField(max_length = 128, verbose_name = "Candidate Name")
	ref_name = models.CharField(max_length = 128, verbose_name= "Reference Name")
	relation = models.CharField(max_length = 128, verbose_name= "Relationship with the Reference Personnel")
	company_name = models.CharField(max_length = 128)
	Phone_number = models.CharField(max_length = 128)
	date_from = models.DateField(verbose_name="From")
	date_to = models.DateField(verbose_name="To")
	position = models.CharField(max_length=128, verbose_name ="position(s) Held")
	salary_history = models.DecimalField(max_digits=19, decimal_places=10,verbose_name="Salary History")
	leaving_reason = models.CharField(max_length=500,verbose_name="Reason For Leaving")
	resposible_description = models.CharField(max_length = 500, 
											verbose_name="Please describe the type of work for which the candidate was resposible")
	coworker_relation = models.CharField(max_length=500,verbose_name="Relationship with co-workers")
	subordinate_relation = models.CharField(max_length=500,
											verbose_name="Relationship with Subordinate")
	supervision_relation = models.CharField(max_length=500,
											verbose_name="Relationship with Supervision")
	attitude = models.CharField(max_length=500,
								verbose_name="Did the candidate have a positive or negative work attitude? Please elaborate")
	output_quality = models.CharField(max_length=500,
										verbose_name="How would you describe the quantity and quality of output generated by the former employee?")
	strength = models.CharField(max_length=500,
								verbose_name="What were his/her strengths on the job?")
	weakness = models.CharField(max_length=500,
								verbose_name="What were his/her weakness on the job?")
	assessment = models.CharField(max_length=500,
									verbose_name="What is your overall assessment of the candiadte?")
	recommend = models.CharField(max_length=500,
									verbose_name="Would you recommend him/her for this position?")
	hire_eligible = models.CharField(max_length=500,
										verbose_name="Would this individual be eligible for rehire?")

class ManPowerRequsition(BaseModel):
	date = models.DateField(verbose_name="Date")
	requisition = models.CharField(max_length=128,verbose_name="Requisition Raised By")
	designation = models.CharField(max_length=128)
	department = models.CharField(max_length=128)
	vacancy_nature = models.CharField(max_length=128,choices=((u'1', u'Repalcement',), (u'2', u'Additional')))

## Detail of the employee who has resigned ###
	
	# employe_detail = models.ForeignKey(PersonalInformation)
	resignation_date = models.DateField()
	leaving_reason = models.CharField(max_length=128)
	report = models.CharField(max_length=128)
	ceo = models.CharField(max_length=128,verbose_name="CEO",help_text="Requisition Manager")
	hr = models.CharField(max_length=128,verbose_name="human Resource",help_text="Requisition Manager")
	form_no = models.URLField(max_length=128)


class NewHire(BaseModel):
	job_title = models.CharField(max_length=128)
	date = models.DateField()
	department = models.CharField(max_length=128)
	Salary = models.DecimalField(max_digits=19, decimal_places=10)
	designation = models.CharField(max_length=128)
	reporting_officer = models.CharField(max_length=128)
	
## Disciplinary Form ##

class Disciplinary(BaseModel):
	taken_action = models.CharField(max_length=128,verbose_name="Action taken against")
	title_against = models.CharField(max_length=128,verbose_name="Title")
	superior_name = models.CharField(max_length=128)
	superior_title = models.CharField(max_length=128,verbose_name="Superior Title")
	id_no = models.IntegerField(max_length=128,verbose_name="User Number")
	department = models.CharField(max_length=128)
	date = models.DateField(verbose_name="Today's Date")
	incident_date = models.DateField(verbose_name="Incident Date")
	Description = models.TextField(max_length=1000,verbose_name="Description of the offence")
	incident = models.TextField(max_length=1000,verbose_name="has thiss similar incident occured before?")
	action_taxken = models.CharField(max_length=128,
									choices=((u'1', u'Verbal',), (u'2', u'Written'), (u'3', u'Suspension'), (u'4', u'Termination'), (u'5', u'Others')))

	period_begin = 	models.DateField(verbose_name="If on Suspension,Period Begins")
	period_ends = models.DateField()
	paid_unpaid = models.CharField(max_length=128,
									choices=((u'1', u'Paid',), (u'2', u'Unpaid')))

	improve = models.TextField(max_length=1000,verbose_name="Consequence for failure to improve")
	employee_statement = models.TextField(max_length=1000,verbose_name="Employee's Statement")

	employee_sign = models.CharField(max_length=128,verbose_name="Employee Signature")
	date_1 = models.DateField()
	employee_sign = models.CharField(max_length=128,verbose_name="Supervisor Signature")
	date_2 = models.DateField()
	hr_sign = models.CharField(max_length=128,verbose_name="HR Manager Sign")
	date_3 = models.DateField()

## Training Booking Form ##
class TrainingBook(BaseModel):
	course_title = models.CharField(max_length=128)
	course_date = models.DateField()
	trainer = models.CharField(max_length=128,verbose_name="Name of Trainer")
	Organization = models.CharField(max_length=128)
	department = models.CharField(max_length=128)
	address = models.CharField(max_length=128)
	job_title = models.CharField(max_length=128) 
	mobile = models.CharField(max_length=128)
	email = models.EmailField()
	duration = models.CharField(max_length=128,verbose_name="Training Duration")
	total_hour = models.IntegerField(max_length=128,verbose_name="Total Training Hours")
	training_days = models.IntegerField(help_text="please type number of days")
	training_time = models.TimeField()
	institute = models.CharField(max_length=128)
	institute_addsress = models.CharField(max_length=300)
	cell = models.CharField(max_length=128)
	institute_email = models.EmailField()

	sign = models.CharField(max_length=128,verbose_name="Signature")
	date = models.DateField()

## Trining Enrollment Form ##

class Enrollment(BaseModel):
	course_title = models.ForeignKey(TrainingBook)

## Clearance Form ##

class Clearance(BaseModel):
	date = models.DateField()
	name = models.CharField(max_length=128)
	designation = models.CharField(max_length=128)
	department = models.CharField(max_length=128)
	employee_id = models.IntegerField(max_length=128)
	join_date = models.DateField(verbose_name="Date of Joining")
	resignation_id = models.CharField(max_length=128)


class Reporting(BaseModel):
	parrent_model = models.ForeignKey("HR.Clearance")
	report_type = (
					("1","Reporting Personnel"),("2","NOC"),("3","Admin"),
					("4","Finance"),("5","Accounts"),("6","HR"),("7","CEO")
				  )

 	designation_type = models.CharField(max_length=128,choices = report_type)
	name = models.CharField(max_length=128)
	designation = models.CharField(max_length=128)
	signature = models.CharField(max_length=128)
	

# ## PaySlip Model ##
class PaySlip(BaseModel):
	# user = models.ForeignKey('HR.PersonalInformation')
	month = (
				("j","January"),("F","February"),("M","March"),
				("A","April"),("M","May"),("J","June"),("Ju","July"),
				("Au","August"),("S","September"),("O","October"),
				("N","November"),("D","December")
			)

	pay_for_month = models.CharField(max_length=128,choices = month)

	year = (
				("1","2015"),("2","2016"),("3","2017"),
				("4","2018"),("5","2019"),("6","2020"),
				("6","2021"),("7","2022"),("8","2023"),
				("9","2024"),("10","2025"),("11","2026"),
				("12","2027"),("13","2028"),("14","2029"),
				("15","2030"),("16","2031"),("17","2032"),
				("18","2033"),("19","2034"),("20","2035")
			)
	pay_for_year = models.IntegerField(max_length=128,choices = year)
	pay_date = models.DateField(verbose_name="Pay Day")

	general_leave = models.CharField(max_length=128)
	annual_leave = models.CharField(max_length=128)
	general_leave_eligible = models.CharField(max_length=128)
	annual_leave_eligible = models.CharField(max_length=128)
	leave_month = models.CharField(max_length=30,choices=month)
	remaining = models.CharField(max_length=128)
	hr_sign = models.CharField(max_length=128,verbose_name="HR & Admin Manager Signature")
	employee_sign = models.CharField(max_length=128,verbose_name="Employee Signature")

	## SalarySlip Under PaySlip MOdel ##
class IncomeSalarySlip(BaseModel):
	parrent_slip = models.ForeignKey("HR.PaySlip")
	income_type = (
					("B","Basic"),("H","HA"),("M","MA"),
					("T","TA"),("F","FA"),("Bo","Bonus")
				  )
	income = models.CharField(max_length=128,choices = income_type)
	amount = models.DecimalField(max_digits=19, decimal_places=10)
	arrears = models.DecimalField(max_digits=19, decimal_places=10)
	deduction = models.CharField(max_length=128,help_text="Deduction Description.e.g. Delay Attendance")
	deduction_amount = models.DecimalField(max_digits=19, decimal_places=10,verbose_name="Ammount")
	deduction_arrears = models.DecimalField(max_digits=19, decimal_places=10,verbose_name="Arrears")




